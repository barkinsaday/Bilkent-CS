module bh_2to4_decoder(
 input a0,
 input a1,
 output y0,
 output y1,
 output y2,
 output y3
 );

 assign y0 = ~a0 && ~a1;
 assign y1 = a0 && ~a1;
 assign y2 = ~a0 && a1;
 assign y3 = a0 && a1;
endmodule


module tb_2to4_decoder();
 logic a0, a1, y0, y1, y2, y3;

 bh_2to4_decoder uut ( .a0(a0), .a1(a1), .y0(y0), .y1(y1), .y2(y2), .y3(y3) );

 initial begin
 
 a0 = 0;
 a1 = 0;
 #10;//00

 a0 = 1;
 a1 = 0;
 #10;//01

 a0 = 0;
 a1 = 1;
 #10;//10

 a0 = 1;
 a1 = 1;
 #10;//11
 end
endmodule


module bh_4to1_mux(
 input logic a0,
 input logic a1,
 input logic a2,
 input logic a3,
 input logic s0,
 input logic s1,
 output logic y
 );
 assign y = a0 && ~s0 && ~s1
 || a1 && s0 && ~s1
 || a2 && ~s0 && s1
 || a3 && s0 && s1;
endmodule


module tb_4to1_mux(
 );

 logic a0, a1, a2, a3, s0, s1, y;

 bh_4to1_mux uut(.a0(a0),
 .a1(a1),
 .a2(a2),
 .a3(a3),
 .s0(s0),
 .s1(s1),
 .y(y) );

 initial
 begin

 a0 = 0;
 a1 = 0;
 a2 = 0;
 a3 = 0;
 s0 = 0;
 s1 = 0;
 #10;
 a0 = 1;
 #10;

 s0 = 1;
 s1 = 0;
 #10;
 a1 = 1;
 #10;

 s0 = 0;
 s1 = 1;
 #10;
 a2 = 1;
 #10;

 s0 = 1;
 s1 = 1;
 #10;
 a3 = 1;
 #10;
 end
endmodule


module bh_8to1_mux(
 input a0, a1, a2, a3, a4, a5, a6, a7,
 input  s0, s1, s2,
 output y
 ); //try using seperate inputs instead of bus
 logic n0, //output of mux_0
 n1; //output of mux_1

 bh_4to1_mux mux_0 ( a0, a1, a2, a3, s0, s1, n0 );
 bh_4to1_mux mux_1 ( a4, a5, a6, a7, s0, s1, n1);

 assign y = n0 && ~s2
 || n1 && s2; //if s2 = 0 y = n0, else y = n1
endmodule


module test_8to1_mux( );
 logic a0, a1, a2, a3, a4, a5, a6, a7,
   s0, s1, s2, y;
bh_8to1_mux uut( .a0(a0), .a1(a1), .a2(a2), .a3(a3), .a4(a4), .a5(a5), .a6(a6), .a7(a7), );
 initial
 begin

 a0 = 0;
 a1 = 0;
 a2 = 0;
 a3 = 0;
 a4 = 0;
 a5 = 0;
 a6 = 0;
 a7 = 0;
 s0 = 0;
 s1 = 0;
 s2 = 0;
 #10;
 a0 = 1;//continue
 

 end
endmodule




module bh_lab03_function(
 input A,
 input B,
 input C,
 input D,
 output Out
 );

 bh_8to1_mux fun( D, 1, D, ~D, ~D, ~D, D, 1, A, B, C, Out );// s0=A, s1=B, s2=C
endmodule


module tb_lab03_function();
 logic a, b, c, d, y;

 bh_lab03_function dut( .A(a), .B(b), .C(c), .D(d), .Out(y) );

 initial begin

 a = 0;
 b = 0;
 c = 0;
 d = 0;
 #10;//0000

 a = 0;
 b = 0;
 c = 0;
 d = 1;
 #10;//0001

 a = 0;
 b = 0;
 c = 1;
 d = 0;
 #10;//0010
 
 a = 0;
 b = 0;
 c = 1;
 d = 1;
 #10;//0011

 a = 0;
 b = 1;
 c = 0;
 d = 0;
 #10;//0100

 a = 0;
 b = 1;
 c = 0;
 d = 1;
 #10;//0101

 a = 0;
 b = 1;
 c = 1;
 d = 0;
 #10;//0110

 a = 0;
 b = 1;
 c = 1;
 d = 1;
 #10;//0111

 a = 1;
 b = 0;
 c = 0;
 d = 0;
 #10;//1000

 a = 1;
 b = 0;
 c = 0;
 d = 1;
 #10;//1001

 a = 1;
 b = 0;
 c = 1;
 d = 0;
 #10;//1010

 a = 1;
 b = 0;
 c = 1;
 d = 1;
 #10;//1011

 a = 1;
 b = 1;
 c = 0;
 d = 0;
 #10;//1100

 a = 1;
 b = 1;
 c = 0;
 d = 1;
 #10;//1101

 a = 1;
 b = 1;
 c = 1;
 d = 0;
 #10;//1110

 a = 1;
 b = 1;
 c = 1;
 d = 1;
 #10;//111
end
endmodule